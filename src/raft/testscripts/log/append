# Appending an entry with term 0 fails, even on an empty log.
!append 0 foo
---
Error: assertion failed: can't append entry with term 0

# Appending to an empty log works. The term doesn't have to be 1, and doesn't
# have to match get_term(). The entry is written to the engine and flushed
# to durable storage.
append 2 foo oplog=true
---
engine: set Entry(1) 0x000000000000000001 = 0x01020103666f6f
engine: flush
append → 1@2 foo

# Appending a noop entry (no command) also works.
append 2 oplog=true
---
engine: set Entry(2) 0x000000000000000002 = 0x020200
engine: flush
append → 2@2 None

# Check that the last index/term is updated (commit index isn't), and that
# the engine contains the expected data, both in logical and raw form.
status
scan
dump
---
last=2@2 commit=0@0
1@2 foo
2@2 None
Entry(1) 0x000000000000000001 = 0x01020103666f6f
Entry(2) 0x000000000000000002 = 0x020200

# Bumping the term with a command is allowed. Skipping a term and omitting the
# command is also allowed.
append 3 command
append 5
---
append → 3@3 command
append → 4@5 None

# A term regression fails, as does a 0 term.
!append 4 old
!append 0
---
Error: assertion failed: term regression 5 → 4
Error: assertion failed: term regression 5 → 0

# Dump the final status and data.
status
scan
dump
---
last=4@5 commit=0@0
1@2 foo
2@2 None
3@3 command
4@5 None
Entry(1) 0x000000000000000001 = 0x01020103666f6f
Entry(2) 0x000000000000000002 = 0x020200
Entry(3) 0x000000000000000003 = 0x03030107636f6d6d616e64
Entry(4) 0x000000000000000004 = 0x040500
