# Tests foreign key references during CREATE TABLE.

# Create two reference tables, with int/string primary keys.
> CREATE TABLE "ref" (id INT PRIMARY KEY, value STRING NOT NULL)
> INSERT INTO "ref" VALUES (1, 'a'), (2, 'b')
---
ok

> CREATE TABLE sref (id STRING PRIMARY KEY, value INTEGER NOT NULL)
> INSERT INTO sref VALUES ('a', 1), ('b', 2)
---
ok

# Creating a table with references works. The reference columns get implicit
# indexes, but only a single schema entity.
[ops]> CREATE TABLE name (id INT PRIMARY KEY, ref_id INT REFERENCES "ref", sref_id STRING REFERENCES sref)
---
set mvcc:NextVersion → 6 ["\x00" → "\x06"]
set mvcc:TxnActive(5) → "" ["\x01\x00\x00\x00\x00\x00\x00\x00\x05" → ""]
set mvcc:TxnWrite(5, sql:Table(name)) → "" ["\x03\x00\x00\x00\x00\x00\x00\x00\x05\x00\xffname\x00\xff\x00\xff\x00\x00" → ""]
set mvcc:Version(sql:Table(name), 5) → CREATE TABLE name ( id INTEGER PRIMARY KEY, ref_id INTEGER DEFAULT NULL INDEX REFERENCES ref, sref_id STRING DEFAULT NULL INDEX REFERENCES sref ) ["\x04\x00\xffname\x00\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05" → "\x016\x04name\x00\x03\x02id\x01\x00\x00\x01\x00\x00\x06ref_id\x01\x01\x01\x00\x00\x01\x01\x03ref\x07sref_id\x03\x01\x01\x00\x00\x01\x01\x04sref"]
delete mvcc:TxnWrite(5, sql:Table(name)) ["\x03\x00\x00\x00\x00\x00\x00\x00\x05\x00\xffname\x00\xff\x00\xff\x00\x00"]
delete mvcc:TxnActive(5) ["\x01\x00\x00\x00\x00\x00\x00\x00\x05"]

schema name
---
CREATE TABLE name (
  id INTEGER PRIMARY KEY,
  ref_id INTEGER DEFAULT NULL INDEX REFERENCES ref,
  sref_id STRING DEFAULT NULL INDEX REFERENCES sref
)

dump
---
mvcc:NextVersion → 6 ["\x00" → "\x06"]
mvcc:Version(sql:Table(name), 5) → CREATE TABLE name ( id INTEGER PRIMARY KEY, ref_id INTEGER DEFAULT NULL INDEX REFERENCES ref, sref_id STRING DEFAULT NULL INDEX REFERENCES sref ) ["\x04\x00\xffname\x00\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05" → "\x016\x04name\x00\x03\x02id\x01\x00\x00\x01\x00\x00\x06ref_id\x01\x01\x01\x00\x00\x01\x01\x03ref\x07sref_id\x03\x01\x01\x00\x00\x01\x01\x04sref"]
mvcc:Version(sql:Table(ref), 1) → CREATE TABLE ref ( id INTEGER PRIMARY KEY, value STRING NOT NULL ) ["\x04\x00\xffref\x00\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01" → "\x01\x1b\x03ref\x00\x02\x02id\x01\x00\x00\x01\x00\x00\x05value\x03\x00\x00\x00\x00\x00"]
mvcc:Version(sql:Table(sref), 3) → CREATE TABLE sref ( id STRING PRIMARY KEY, value INTEGER NOT NULL ) ["\x04\x00\xffsref\x00\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x01\x1c\x04sref\x00\x02\x02id\x03\x00\x00\x01\x00\x00\x05value\x01\x00\x00\x00\x00\x00"]
mvcc:Version(sql:Row(ref, 1), 2) → 1,'a' ["\x04\x02ref\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02" → "\x01\x06\x02\x02\x02\x04\x01a"]
mvcc:Version(sql:Row(ref, 2), 2) → 2,'b' ["\x04\x02ref\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02" → "\x01\x06\x02\x02\x04\x04\x01b"]
mvcc:Version(sql:Row(sref, 'a'), 4) → 'a',1 ["\x04\x02sref\x00\xff\x00\xff\x04a\x00\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04" → "\x01\x06\x02\x04\x01a\x02\x02"]
mvcc:Version(sql:Row(sref, 'b'), 4) → 'b',2 ["\x04\x02sref\x00\xff\x00\xff\x04b\x00\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04" → "\x01\x06\x02\x04\x01b\x02\x04"]

# Missing reference table errors.
!> CREATE TABLE test (id INT PRIMARY KEY, "ref" INT REFERENCES missing)
---
Error: invalid input: unknown table missing referenced by column ref

# Reference type conflicts errors.
!> CREATE TABLE test (id INT PRIMARY KEY, ref_id FLOAT REFERENCES "ref")
!> CREATE TABLE test (id INT PRIMARY KEY, sref_id INT REFERENCES sref)
---
Error: invalid input: can't reference INTEGER primary key of ref from FLOAT column ref_id
Error: invalid input: can't reference STRING primary key of sref from INTEGER column sref_id

# Self-references work.
> CREATE TABLE self (id INT PRIMARY KEY, self_id INT REFERENCES self)
schema self
---
CREATE TABLE self (
  id INTEGER PRIMARY KEY,
  self_id INTEGER DEFAULT NULL INDEX REFERENCES self
)
