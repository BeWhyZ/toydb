# Basic DROP TABLE tests.

> CREATE TABLE name (id INT PRIMARY KEY, value STRING NOT NULL)
> INSERT INTO name VALUES (1, 'a'), (2, 'b')
---
ok

# Dropping a simple table works, and removes the schema entry and rows.
# Also output the trivial plan and statement result.
[plan,result,ops]> DROP TABLE name
---
DropTable: name
DropTable { name: "name", existed: true }
storage set mvcc:NextVersion → 4 ["\x00" → "\x04"]
storage set mvcc:TxnActive(3) → "" ["\x01\x00\x00\x00\x00\x00\x00\x00\x03" → ""]
storage set mvcc:TxnWrite(3, sql:Table(name)) → "" ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x00\xffname\x00\xff\x00\xff\x00\x00" → ""]
storage set mvcc:Version(sql:Table(name), 3) → None ["\x04\x00\xffname\x00\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x00"]
storage set mvcc:TxnWrite(3, sql:Row(name, 1)) → "" ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x01\x00\x00" → ""]
storage set mvcc:Version(sql:Row(name, 1), 3) → None ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x00"]
storage set mvcc:TxnWrite(3, sql:Row(name, 2)) → "" ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x02\x00\x00" → ""]
storage set mvcc:Version(sql:Row(name, 2), 3) → None ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x00"]
storage delete mvcc:TxnWrite(3, sql:Table(name)) ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x00\xffname\x00\xff\x00\xff\x00\x00"]
storage delete mvcc:TxnWrite(3, sql:Row(name, 1)) ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x01\x00\x00"]
storage delete mvcc:TxnWrite(3, sql:Row(name, 2)) ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x02\x00\x00"]
storage delete mvcc:TxnActive(3) ["\x01\x00\x00\x00\x00\x00\x00\x00\x03"]

schema
---
ok

dump
---
mvcc:NextVersion → 4 ["\x00" → "\x04"]
mvcc:Version(sql:Table(name), 1) → CREATE TABLE name ( id INTEGER PRIMARY KEY, value STRING NOT NULL ) ["\x04\x00\xffname\x00\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01" → "\x01\x1c\x04name\x00\x02\x02id\x01\x00\x00\x01\x00\x00\x05value\x03\x00\x00\x00\x00\x00"]
mvcc:Version(sql:Table(name), 3) → None ["\x04\x00\xffname\x00\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x00"]
mvcc:Version(sql:Row(name, 1), 2) → 1,'a' ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02" → "\x01\x06\x02\x02\x02\x04\x01a"]
mvcc:Version(sql:Row(name, 1), 3) → None ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x00"]
mvcc:Version(sql:Row(name, 2), 2) → 2,'b' ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02" → "\x01\x06\x02\x02\x04\x04\x01b"]
mvcc:Version(sql:Row(name, 2), 3) → None ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x00"]

# Dropping a missing table errors, but not if IF EXISTS is given.
!> DROP TABLE name
---
Error: invalid input: table name does not exist

[result,ops]> DROP TABLE IF EXISTS name
---
DropTable { name: "name", existed: false }
storage set mvcc:NextVersion → 6 ["\x00" → "\x06"]
storage set mvcc:TxnActive(5) → "" ["\x01\x00\x00\x00\x00\x00\x00\x00\x05" → ""]
storage delete mvcc:TxnActive(5) ["\x01\x00\x00\x00\x00\x00\x00\x00\x05"]

# No table or multiple tables errors.
!> DROP TABLE
!> DROP TABLE a, b, c
---
Error: invalid input: unexpected end of input
Error: invalid input: unexpected token ,
