# Tests LIMIT clauses.

> CREATE TABLE test (id INT PRIMARY KEY, value STRING)
> INSERT INTO test VALUES (1, 'a'), (2, 'b'), (3, 'c')
---
ok

# Test all limits from 4 to 0.
[plan]> SELECT * FROM test LIMIT 4
---
Limit: 4
└─ Scan: test
1, 'a'
2, 'b'
3, 'c'

> SELECT * FROM test LIMIT 3
---
1, 'a'
2, 'b'
3, 'c'

> SELECT * FROM test LIMIT 2
---
1, 'a'
2, 'b'

> SELECT * FROM test LIMIT 1
---
1, 'a'

[plan]> SELECT * FROM test LIMIT 0
---
Nothing

# A max i64 limit works.
> SELECT * FROM test LIMIT 9223372036854775807
---
1, 'a'
2, 'b'
3, 'c'

# Limits can also be used with constant values.
[plan]> SELECT 1, 2, 3 LIMIT 1
---
Limit: 1
└─ Projection: 1, 2, 3
   └─ Values: blank row
1, 2, 3

[plan]> SELECT 1, 2, 3 LIMIT 0
---
Nothing

# Limits can be expressions, but only constant ones.
[plan]> SELECT * FROM test LIMIT 1 + 1
---
Limit: 2
└─ Scan: test
1, 'a'
2, 'b'

!> SELECT * FROM test LIMIT id
---
Error: invalid input: expression must be constant, found column id

# Negative and NULL limits error.
!> SELECT * FROM test LIMIT -1
!> SELECT * FROM test LIMIT NULL
---
Error: invalid input: invalid limit -1
Error: invalid input: invalid limit NULL

# Non-integer limits error.
!> SELECT * FROM test LIMIT FALSE
!> SELECT * FROM test LIMIT 1.0
!> SELECT * FROM test LIMIT '1'
---
Error: invalid input: invalid limit FALSE
Error: invalid input: invalid limit 1.0
Error: invalid input: invalid limit '1'

# Multiple limits error.
!> SELECT * FROM test LIMIT 1 2
!> SELECT * FROM test LIMIT 1,2
---
Error: invalid input: unexpected token 2
Error: invalid input: unexpected token ,
