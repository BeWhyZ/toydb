# Tests UPDATE primary key handling.

# Boolean.
> CREATE TABLE "bool" (id BOOLEAN PRIMARY KEY)
> INSERT INTO "bool" VALUES (TRUE)
> UPDATE "bool" SET id = FALSE
> SELECT * FROM "bool"
---
FALSE

> INSERT INTO "bool" VALUES (TRUE)
!> UPDATE "bool" SET id = FALSE
!> UPDATE "bool" SET id = FALSE WHERE id = TRUE
---
Error: invalid input: primary key FALSE already exists
Error: invalid input: primary key FALSE already exists

# Integer.
> CREATE TABLE "int" (id INT PRIMARY KEY)
> INSERT INTO "int" VALUES (0)
> UPDATE "int" SET id = 1
> SELECT * FROM "int"
> UPDATE "int" SET id = -1
> SELECT * FROM "int"
> UPDATE "int" SET id = 9223372036854775807
> SELECT * FROM "int"
> UPDATE "int" SET id = -9223372036854775807
> SELECT * FROM "int"
---
1
-1
9223372036854775807
-9223372036854775807

> INSERT INTO "int" VALUES (0)
> UPDATE "int" SET id = 1 WHERE id = -9223372036854775807
> SELECT * FROM "int"
---
0
1

!> UPDATE "int" SET id = 1
!> UPDATE "int" SET id = 2
---
Error: invalid input: primary key 1 already exists
Error: invalid input: primary key 2 already exists

# Float.
> CREATE TABLE "float" (id FLOAT PRIMARY KEY)
> INSERT INTO "float" VALUES (0.0)
> UPDATE "float" SET id = 3.14
> SELECT * FROM "float"
> UPDATE "float" SET id = -3.14
> SELECT * FROM "float"
> UPDATE "float" SET id = 0.0
> SELECT * FROM "float"
> UPDATE "float" SET id = -0.0
> SELECT * FROM "float"
> UPDATE "float" SET id = 1.23456789012345e308
> SELECT * FROM "float"
> UPDATE "float" SET id = -1.23456789012345e308
> SELECT * FROM "float"
> UPDATE "float" SET id = INFINITY
> SELECT * FROM "float"
> UPDATE "float" SET id = -INFINITY
> SELECT * FROM "float"
---
3.14
-3.14
0.0
0.0
1.23456789012345e308
-1.23456789012345e308
inf
-inf

> INSERT INTO "float" VALUES (1.0)
> UPDATE "float" SET id = 0.0 WHERE id = 1.0
> SELECT * FROM "float"
---
-inf
0.0

!> UPDATE "float" SET id = 3.14
!> UPDATE "float" SET id = -3.14
!> UPDATE "float" SET id = 0.0
!> UPDATE "float" SET id = -0.0
!> UPDATE "float" SET id = 1.23456789012345e308
!> UPDATE "float" SET id = -1.23456789012345e308
!> UPDATE "float" SET id = INFINITY
!> UPDATE "float" SET id = -INFINITY
!> UPDATE "float" SET id = NAN
!> UPDATE "float" SET id = NULL
---
Error: invalid input: primary key 3.14 already exists
Error: invalid input: primary key -3.14 already exists
Error: invalid input: primary key 0.0 already exists
Error: invalid input: primary key 0.0 already exists
Error: invalid input: primary key 1.23456789012345e308 already exists
Error: invalid input: primary key -1.23456789012345e308 already exists
Error: invalid input: primary key inf already exists
Error: invalid input: primary key -inf already exists
Error: invalid input: invalid primary key NaN
Error: invalid input: invalid primary key NULL

# String.
> CREATE TABLE "string" (id STRING PRIMARY KEY)
> INSERT INTO "string" VALUES ('')
> UPDATE "string" SET id = ''
> UPDATE "string" SET id = '  '
> UPDATE "string" SET id = 'abc'
> UPDATE "string" SET id = 'ABC'
> UPDATE "string" SET id = 'Hi! ðŸ‘‹'
> SELECT * FROM "string"
---
'Hi! ðŸ‘‹'

> INSERT INTO "string" VALUES ('')
> UPDATE "string" SET id = 'foo' WHERE id = ''
> SELECT * FROM "string"
---
'Hi! ðŸ‘‹'
'foo'

!> UPDATE "string" SET id = ''
!> UPDATE "string" SET id = '  '
!> UPDATE "string" SET id = 'abc'
!> UPDATE "string" SET id = 'ABC'
!> UPDATE "string" SET id = 'Hi! ðŸ‘‹'
!> UPDATE "string" SET id = NULL
---
Error: invalid input: primary key '' already exists
Error: invalid input: primary key '  ' already exists
Error: invalid input: primary key 'abc' already exists
Error: invalid input: primary key 'ABC' already exists
Error: invalid input: primary key 'Hi! ðŸ‘‹' already exists
Error: invalid input: invalid primary key NULL

# Primary key updates error if intermediate row updates violate primary key
# uniqueness, even if the final state wouldn't violate the constraints. This is
# also true with Postgres.
> SELECT * FROM "int"
---
0
1

!> UPDATE "int" SET id = id + 1
---
Error: invalid input: primary key 1 already exists

# The updates happen in primary key order, so the reverse update does work.
> UPDATE "int" SET id = id - 1
> SELECT * FROM "int"
---
-1
0
