# Tests basic INSERT functionality.

> CREATE TABLE name (id INT PRIMARY KEY, value STRING)
---
ok

# INSERT writes a row to the table, and returns the number of rows.
[plan,result,ops]> INSERT INTO name VALUES (1, 'a')
---
Insert: name
└─ Values: 1, 'a'
set mvcc:NextVersion → 3 ["\x00" → "\x03"]
set mvcc:TxnActive(2) → "" ["\x01\x00\x00\x00\x00\x00\x00\x00\x02" → ""]
set mvcc:TxnWrite(2, sql:Row(name, 1)) → "" ["\x03\x00\x00\x00\x00\x00\x00\x00\x02\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x01\x00\x00" → ""]
set mvcc:Version(sql:Row(name, 1), 2) → 1,'a' ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02" → "\x01\x06\x02\x02\x02\x04\x01a"]
delete mvcc:TxnWrite(2, sql:Row(name, 1)) ["\x03\x00\x00\x00\x00\x00\x00\x00\x02\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x01\x00\x00"]
delete mvcc:TxnActive(2) ["\x01\x00\x00\x00\x00\x00\x00\x00\x02"]
Insert { count: 1 }

# It can also write multiple rows.
[plan,result,ops]> INSERT INTO name VALUES (2, 'b'), (3, 'c'), (4, 'd')
---
Insert: name
└─ Values: 3 rows
set mvcc:NextVersion → 4 ["\x00" → "\x04"]
set mvcc:TxnActive(3) → "" ["\x01\x00\x00\x00\x00\x00\x00\x00\x03" → ""]
set mvcc:TxnWrite(3, sql:Row(name, 2)) → "" ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x02\x00\x00" → ""]
set mvcc:Version(sql:Row(name, 2), 3) → 2,'b' ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x01\x06\x02\x02\x04\x04\x01b"]
set mvcc:TxnWrite(3, sql:Row(name, 3)) → "" ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x03\x00\x00" → ""]
set mvcc:Version(sql:Row(name, 3), 3) → 3,'c' ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x01\x06\x02\x02\x06\x04\x01c"]
set mvcc:TxnWrite(3, sql:Row(name, 4)) → "" ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x04\x00\x00" → ""]
set mvcc:Version(sql:Row(name, 4), 3) → 4,'d' ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x01\x06\x02\x02\x08\x04\x01d"]
delete mvcc:TxnWrite(3, sql:Row(name, 2)) ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x02\x00\x00"]
delete mvcc:TxnWrite(3, sql:Row(name, 3)) ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x03\x00\x00"]
delete mvcc:TxnWrite(3, sql:Row(name, 4)) ["\x03\x00\x00\x00\x00\x00\x00\x00\x03\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x04\x00\x00"]
delete mvcc:TxnActive(3) ["\x01\x00\x00\x00\x00\x00\x00\x00\x03"]
Insert { count: 3 }

> SELECT * FROM name
---
1, 'a'
2, 'b'
3, 'c'
4, 'd'

dump
---
mvcc:NextVersion → 4 ["\x00" → "\x04"]
mvcc:Version(sql:Table(name), 1) → CREATE TABLE name ( id INTEGER PRIMARY KEY, value STRING DEFAULT NULL ) ["\x04\x00\xffname\x00\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01" → "\x01\x1d\x04name\x00\x02\x02id\x01\x00\x00\x01\x00\x00\x05value\x03\x01\x01\x00\x00\x00\x00"]
mvcc:Version(sql:Row(name, 1), 2) → 1,'a' ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02" → "\x01\x06\x02\x02\x02\x04\x01a"]
mvcc:Version(sql:Row(name, 2), 3) → 2,'b' ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x01\x06\x02\x02\x04\x04\x01b"]
mvcc:Version(sql:Row(name, 3), 3) → 3,'c' ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x01\x06\x02\x02\x06\x04\x01c"]
mvcc:Version(sql:Row(name, 4), 3) → 4,'d' ["\x04\x02name\x00\xff\x00\xff\x02\x80\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03" → "\x01\x06\x02\x02\x08\x04\x01d"]

# INSERTs can use expressions, but only constant ones.
> INSERT INTO name VALUES (2^2+1, 'abc')
> SELECT * FROM name
---
1, 'a'
2, 'b'
3, 'c'
4, 'd'
5, 'abc'

!> INSERT INTO name VALUES (id + 2, 'abc')
---
Error: invalid input: expression must be constant, found column id

# INSERTs with too many columns errors. Fewer are tested by insert_default.
!> INSERT INTO name VALUES (6, 'e', NULL)
---
Error: invalid input: too many values for table name

# Bare insert errors, as does no values.
!> INSERT
!> INSERT INTO
!> INSERT INTO name
---
Error: invalid input: unexpected end of input
Error: invalid input: unexpected end of input
Error: invalid input: unexpected end of input

# Unknown table or column errors.
!> INSERT INTO foo VALUES (1)
!> INSERT INTO name (id, foo) VALUES (1, 'bar')
---
Error: invalid input: table foo does not exist
Error: invalid input: unknown column foo in table name

# Multiple tables errors.
!> INSERT INTO name, other VALUES (1)
---
Error: invalid input: expected token VALUES, found ,

# Specifying the same column multiple times errors.
!> INSERT INTO name (id, value, value) VALUES (6, 'e', 'f')
---
Error: invalid input: column value given multiple times
