# Tests various client operations.
#
# Uses a single-node cluster for determinism.

cluster nodes=1
---
ok

# Add some tables and data.
> CREATE TABLE countries (id STRING PRIMARY KEY, name STRING NOT NULL)
> INSERT INTO countries VALUES ('fr', 'France'), ('ru', 'Russia'), ('us', 'United States of America')
> CREATE TABLE genres (id INTEGER PRIMARY KEY, name STRING NOT NULL)
> INSERT INTO genres VALUES (1, 'Science Fiction'), (2, 'Action'), (3, 'Comedy')
> CREATE TABLE studios (id INTEGER PRIMARY KEY, name STRING NOT NULL, country_id STRING REFERENCES countries)
> INSERT INTO studios VALUES (1, 'Mosfilm', 'ru'), (2, 'Lionsgate', 'us'), (3, 'StudioCanal', 'fr'), (4, 'Warner Bros', 'us')
> CREATE TABLE movies ( \
    id INTEGER PRIMARY KEY, \
    title STRING NOT NULL, \
    studio_id INTEGER NOT NULL REFERENCES studios, \
    genre_id INTEGER NOT NULL REFERENCES genres, \
    released INTEGER NOT NULL, \
    rating FLOAT, \
    ultrahd BOOLEAN \
)
> INSERT INTO movies VALUES \
    (1, 'Stalker', 1, 1, 1979, 8.2, NULL), \
    (2, 'Sicario', 2, 2, 2015, 7.6, TRUE), \
    (3, 'Primer', 3, 1, 2004, 6.9, NULL), \
    (4, 'Heat', 4, 2, 1995, 8.2, TRUE), \
    (5, 'The Fountain', 4, 1, 2006, 7.2, FALSE), \
    (6, 'Solaris', 1, 1, 1972, 8.1, NULL), \
    (7, 'Gravity', 4, 1, 2013, 7.7, TRUE), \
    (8, 'Blindspotting', 2, 3, 2018, 7.4, TRUE), \
    (9, 'Birdman', 4, 3, 2014, 7.7, TRUE), \
    (10, 'Inception', 4, 1, 2010, 8.8, TRUE)
---
ok

# List the tables and display table schemas. Error on missing table.
tables
---
countries
genres
movies
studios

table movies
---
CREATE TABLE movies (
  id INTEGER PRIMARY KEY,
  title STRING NOT NULL,
  studio_id INTEGER NOT NULL INDEX REFERENCES studios,
  genre_id INTEGER NOT NULL INDEX REFERENCES genres,
  released INTEGER NOT NULL,
  rating FLOAT DEFAULT NULL,
  ultrahd BOOLEAN DEFAULT NULL
)

table movies raw=true
---
Table {
    name: "movies",
    primary_key: 0,
    columns: [
        Column {
            name: "id",
            datatype: Integer,
            nullable: false,
            default: None,
            unique: true,
            index: false,
            references: None,
        },
        Column {
            name: "title",
            datatype: String,
            nullable: false,
            default: None,
            unique: false,
            index: false,
            references: None,
        },
        Column {
            name: "studio_id",
            datatype: Integer,
            nullable: false,
            default: None,
            unique: false,
            index: true,
            references: Some(
                "studios",
            ),
        },
        Column {
            name: "genre_id",
            datatype: Integer,
            nullable: false,
            default: None,
            unique: false,
            index: true,
            references: Some(
                "genres",
            ),
        },
        Column {
            name: "released",
            datatype: Integer,
            nullable: false,
            default: None,
            unique: false,
            index: false,
            references: None,
        },
        Column {
            name: "rating",
            datatype: Float,
            nullable: true,
            default: Some(
                Null,
            ),
            unique: false,
            index: false,
            references: None,
        },
        Column {
            name: "ultrahd",
            datatype: Boolean,
            nullable: true,
            default: Some(
                Null,
            ),
            unique: false,
            index: false,
            references: None,
        },
    ],
}

table countries
table genres
table studios
---
CREATE TABLE countries (
  id STRING PRIMARY KEY,
  name STRING NOT NULL
)
CREATE TABLE genres (
  id INTEGER PRIMARY KEY,
  name STRING NOT NULL
)
CREATE TABLE studios (
  id INTEGER PRIMARY KEY,
  name STRING NOT NULL,
  country_id STRING DEFAULT NULL INDEX REFERENCES countries
)

!table missing
---
Error: invalid input: table missing does not exist

# Fetch server status.
status
---
Status {
    server: 1,
    raft: Status {
        leader: 1,
        term: 1,
        match_index: {
            1: 25,
        },
        commit_index: 25,
        applied_index: 25,
        storage: Status {
            name: "bitcask",
            keys: 27,
            size: 1169,
            total_disk_size: 1649,
            live_disk_size: 1385,
            garbage_disk_size: 264,
        },
    },
    mvcc: Status {
        versions: 8,
        active_txns: 0,
        storage: Status {
            name: "bitcask",
            keys: 36,
            size: 2177,
            total_disk_size: 8259,
            live_disk_size: 2465,
            garbage_disk_size: 5794,
        },
    },
}
